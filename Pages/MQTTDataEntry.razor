@using static BlazorMQTT.Data.MQTTState;




@for(int i = 0; i<=entry.topicSequence.Length; i++) 
{
    string margin = String.Concat(Enumerable.Repeat("       ", i));
    
    if (i==entry.topicSequence.Length && entry.value != null)
    {
        <span><pre> @margin =@entry.value</pre></span>
    }
    else
    {
        <span><pre> @margin / @entry.topicSequence[i]</pre></span>
    }
}

<br />

@*@if (entry.value != null)
{
    <span> = @entry.value<br /></span>
}*@






@code {
    [Parameter]
    public Entry entry { get; set; }

    protected override void OnInitialized()
    {
        entry.OnChange += OnChangeHandler;
        
    }

    private async void OnChangeHandler()
    {
        await InvokeAsync(StateHasChanged);
    }
    public void Dispose()
    {
        entry.OnChange -= OnChangeHandler;
    }
}
